The ``matrix_divided`` module.
======================
The `add_integer` function ensures that both `a` and `b` are either integers or floats.
If either value is a float, it will be cast to an integer before performing the addition.
If the values are not valid types, the function raises a `TypeError` with an appropriate error message.

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` file:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[1, 2, 3], (4, 5, 6)], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2,"s"], [4, 5, 6]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "s")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided(5)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
